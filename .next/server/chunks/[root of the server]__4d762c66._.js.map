{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/emily/semanticode/src/app/api/saveCode/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\n\nexport async function POST(req: Request) {\n  try {\n    const { html, css } = await req.json();\n\n    if (!html) {\n      return NextResponse.json(\n        { error: 'Missing required fields' },\n        { status: 400 },\n      );\n    }\n\n    const fullHtml = `\n        <!DOCTYPE html>\n        <html lang=\"pt\">\n        <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <title>Teste</title>\n          <style>${css}</style>\n        </head>\n        <body>${html}</body>\n        </html>\n    `;\n\n    const id = Math.random().toString(36).substr(2, 9);\n    saveTempPage(id, fullHtml);\n\n    setTimeout(() => deleteTempPage(id), 10 * 60 * 1000);\n\n    return NextResponse.json({\n      message: 'File created successfully',\n      id,\n    });\n  } catch (error) {\n    console.error('Error saving code:', error);\n    return NextResponse.json({ error: `Error saving code: ${error}` }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,MAAM,IAAI,IAAI;QAEpC,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0B,GACnC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,WAAW,CAAC;;;;;;;iBAOL,EAAE,IAAI;;cAET,EAAE,KAAK;;IAEjB,CAAC;QAED,MAAM,KAAK,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG;QAChD,aAAa,IAAI;QAEjB,WAAW,IAAM,eAAe,KAAK,KAAK,KAAK;QAE/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,CAAC,mBAAmB,EAAE,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnF;AACF","debugId":null}}]
}